services:
  postgres:
    image: postgres:15
    container_name: postgres_container
    environment:
      POSTGRES_USER: andrey
      POSTGRES_PASSWORD: Password
      POSTGRES_DB: rag_database
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U andrey -d rag_database" ]
      interval: 5s
      retries: 5
      start_period: 10s

  api:
    build: API
    container_name: api
    ports:
      - "8000:8000"
    volumes:
      - ./API:/app
      - ~/.config/yandex-cloud:/root/.config/yandex-cloud
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    restart: always

  frontend:
    build: frontend
    container_name: frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_LOGS: "/dev/null"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status || exit 1"]
      interval: 1s
      timeout: 5s
      retries: 60
  
  ocr_micro_servis:
    build: 
      context: ./ocr_micro_servis
      dockerfile: Dockerfile
    container_name: ocr_micro_servis
    environment:
      - PYTHONUNBUFFERED="1"
    env_file:
      - ./ocr_micro_servis/.env
    depends_on:
      rabbitmq:
        condition: service_healthy

    restart: always

volumes:
  rabbitmq_data: